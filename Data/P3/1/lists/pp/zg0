;zg0
;avance-version (18/04/13)
;1D sequence
;using p0 for any flip angle
;
;$CLASS=HighRes
;$DIM=1D
;$TYPE=
;$SUBTYPE=
;$COMMENT=


#include <Avance.incl>


#   ifdef ERNSTANG
"cnst18=DEG*(acos(1*(exp(-(d1+aq)/cnst10))))"
#   endif /* ERNSTANG */ 

#if   defined(CALC_P0) || defined(ERNSTANG)
"p0=p1*cnst18/90.0"
#   endif /* CALC_P0, ERNSTANG */ 


"acqt0=-tan((p0/p1)*(PI/4))*p1*2/PI"


1 ze
2 30m
  d1
  p0 ph1
  go=2 ph31
  30m mc #0 to 2 F0(zd)
exit


ph1=0 2 2 0 1 3 3 1
ph31=0 2 2 0 1 3 3 1


;pl1 : f1 channel - power level for pulse (default)
;p0 : for any flip angle
;p1 : f1 channel -  90 degree high power pulse
;d1 : relaxation delay; 1-5 * T1
;cnst10: estimated or measured T1 of sample
;cnst18: flip angle in degree
;ns: 1 * n, total number of scans: NS * TD0




                                          ;preprocessor-flags-start
;ERNSTANG: to use the ernst-angle, enter T1 as cnst10 
;             option -DERNSTANG (eda: ZGOPTNS) 
;CALC_P0: to run the experiment with a defined flip angle (defined as cnst18)
;            option -DCALC_P0 (eda: ZGOPTNS)
                                          ;preprocessor-flags-end



;$Id:$
